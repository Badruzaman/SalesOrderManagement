@page "/Product/ProductList"
@inherits SalesOrderBase
@inject NavigationManager navigationManager

<PageTitle>Product List</PageTitle>
<div>
    <a class="btn btn-primary" href='/Product/AddProduct'>Add New Data</a>
</div>

    <table class="table table-bordered table-hover">

        @if (Products == null || Products.Count() == 0)
        {
            <tr>
                <td colspan="4">
                    No Records to display
                </td>
            </tr>
        }
        else
        {
        int i = 1;
            <thead>
                <tr>
                    <th style="width:1%">SL</th>
                    <th>Product</th>
                    <th style="text-align:right; width:10%">
                        Action
                    </th>
                </tr>
            </thead>
            foreach (var product in Products)
            {
                <tbody>
                    <tr>
                        <td>@(i++)</td>
                        <td>@product.ProductName</td>
                        <td style="text-align:right; width:10%">
                            <button type="button" class="btn btn-primary" @onclick="@(() => NavigateToEditProduct(product.ProductId))">Edit</button>
                        </td>
                    </tr>
                </tbody>
            }
        }

    </table>

@code {
    protected override async Task OnInitializedAsync()
    {
        Products = await ProductService.GetProducts();
    }
    private void NavigateToEditProduct(int id)
    {
        navigationManager.NavigateTo($"/Product/EditProduct/{id}");
    }
}

