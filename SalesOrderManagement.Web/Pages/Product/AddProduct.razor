@page "/Product/AddProduct"
@inherits ProductBase
@inject NavigationManager navigationManager


@if (Products == null)
{
    <h3>
        Loading...
    </h3>
}
else
{
    <h3>
        Add Product
    </h3>
    <form>
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label for="Name" class="control-label">Name</label>
                    <input for="Name" class="form-control" @bind="@product.ProductName" onfocus="this.value=''" />
                </div>
            </div>
            <div class="col-md-4">
              @*  <div class="form-group">
                    <label for="Name" class="control-label">State</label>
                    <select for="State" class="form-control" @bind="@product.StateId">
                        <option value="0">--select state--</option>
                        @foreach (var state in States)
                        {
                            <option value="@state.StateId">@state.Name</option>
                        }
                    </select>
                </div>*@
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <button type="button" class="btn btn-primary" @onclick="CreateProduct">Save</button>
                    <button type="button" class="btn btn-warning" @onclick="Cancel">Cancel</button>
                </div>
            </div>
        </div>
       @* @if (DisplayAlert)
        {
            <div class="alert alert-success fade" role="alert">
                Data Saved Successfully
            </div>
        }*@
    </form>
}

@code {

    //[Parameter]
    //public bool DisplayAlert { get; set; }

   
    //protected override async Task OnInitializedAsync()
    //{
    //    Products = await ProductService.GetProducts();
    //}
    private async Task CreateProduct()
    {
        if (!string.IsNullOrWhiteSpace(product.ProductName))
        {
            await ProductService.Create(product);
            //if (response.StatusCode.ToString() == "OK")
            //{
            //    //DisplayAlert = true;
            //}
            //Product.pro = string.Empty;
            navigationManager.NavigateTo("/Product/ProductList");
        }
    }
    private void Cancel()
    {
        navigationManager.NavigateTo("/Product/ProductList");
    }
}

