@page "/Building/EditBuilding/{id:int}"
@inherits BuildingBase
@inject NavigationManager navigationManager
@using SalesOderManagement.Web.Services.Contracts

@if (building == null)
{
    <h3>Loading....</h3>
}
else
{
    <h3>
        Edit Building
    </h3>
    <form>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="Name" class="control-label">Name</label>
                    <input for="Name" class="form-control"@bind="@building.Name" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="Name" class="control-label">State</label>
                    <select for="State" class="form-control" @bind="@building.StateId">
                        <option value="0">--select state--</option>
                        @foreach (var state in States)
                        {
                            <option value="@state.StateId">@state.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <button type="button" class="btn btn-primary"@onclick="UpdateBuilding"> Update</button>
                    <button type="button" class="btn btn-warning" @onclick="Cancel"> Cancel</button>
                </div>
            </div>
        </div>
    </form>
}

@code
{
    [Parameter]
    public int id { get; set; }

    [Inject]
    public IStateService StateService { get; set; }
    IEnumerable<DTOState> States { get; set; }

    [Inject]
    IBuildingService BuildingService { get; set; }
    public DTOBuilding building { get; set; } = new DTOBuilding();

    protected override async Task OnInitializedAsync()
    {
        building = await BuildingService.GetBuildingById(id);
        States = await StateService.GetStates();
    }
    private async Task UpdateBuilding()
    {
        if (!string.IsNullOrWhiteSpace(building.Name))
        {
            await BuildingService.Update(building);
            building.Name = string.Empty;
            navigationManager.NavigateTo("/Building/BuildingList");
        }
    }
    private void Cancel()
    {
        navigationManager.NavigateTo("/Building/BuildingList");
    }
}
